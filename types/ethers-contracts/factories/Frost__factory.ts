/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { Frost, FrostInterface } from "../Frost.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "message",
        "type": "bytes32"
      },
      {
        "internalType": "uint256",
        "name": "px",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "py",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "rx",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "ry",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "z",
        "type": "uint256"
      }
    ],
    "name": "measureVerify",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "cold",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "warm",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "message",
        "type": "bytes32"
      },
      {
        "internalType": "uint256",
        "name": "px",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "py",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "rx",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "ry",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "z",
        "type": "uint256"
      }
    ],
    "name": "verify",
    "outputs": [
      {
        "internalType": "address",
        "name": "signer",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  const _bytecode = "0x6080604052348015600e575f5ffd5b5061080c8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c806351c39d5614610038578063ca6eee2614610069575b5f5ffd5b610052600480360381019061004d9190610692565b610099565b60405161006092919061072a565b60405180910390f35b610083600480360381019061007e9190610692565b6100dd565b6040516100909190610790565b60405180910390f35b5f5f5f5a90506100ad8989898989896100dd565b505f5a90506100c08a8a8a8a8a8a6100dd565b505f5a905081830394508082039350505050965096945050505050565b5f5f6100e98787610190565b90505f6100f68686610251565b90505f61010285610312565b90505f818316841690508061011d575f945050505050610186565b505050505f61012f858589898c610341565b90505f61015e86867ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f03610398565b90505f61016d858a8a866103c2565b90506101798989610398565b9350808214840293505050505b9695505050505050565b5f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f82107ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418410167ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f60077ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f808788098709087ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8485091416905092915050565b5f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f82107ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8410167ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f60077ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f808788098709087ffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f8485091416905092915050565b5f7ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414182105f8311169050919050565b5f61038d610352878787878761043f565b6040518060400160405280601d81526020017f46524f53542d736563703235366b312d5348413235362d76316368616c0000008152506104c4565b905095945050505050565b5f825f528160205273ffffffffffffffffffffffffffffffffffffffff60405f2016905092915050565b5f6040517ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418587098152601b600185160160208201528460408201527ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141858409606082015260205f60808360015afa5f5102915050949350505050565b6060606267ffffffffffffffff81111561045c5761045b6107a9565b5b6040519080825280601f01601f19166020018201604052801561048e5781602001600182028036833780820191505090505b50905060018516600201602082015385602182015260018316600201604182015383604282015281606282015295945050505050565b5f5f6104d284846030610543565b90507ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414170010000000000000000000000000000000060208301510991507ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141604082015160801c830891505092915050565b6060604051905061ffe082603f01168101604052818152604051805f81526020810190505f8152602081019050855160208701825e8551810190508360f01b81526003810190506021810360018203865160208801845e865183019250865183536001830192508183036020838686038760025afa6105c0575f5ffd5b8251600183536020808801838660025afa6105d9575f5ffd5b60025b602089111561061a578060051b8801602081035183188652818553602081858860025afa610608575f5ffd5b506001810190506020890398506105dc565b505050505050509392505050565b5f5ffd5b5f819050919050565b61063e8161062c565b8114610648575f5ffd5b50565b5f8135905061065981610635565b92915050565b5f819050919050565b6106718161065f565b811461067b575f5ffd5b50565b5f8135905061068c81610668565b92915050565b5f5f5f5f5f5f60c087890312156106ac576106ab610628565b5b5f6106b989828a0161064b565b96505060206106ca89828a0161067e565b95505060406106db89828a0161067e565b94505060606106ec89828a0161067e565b93505060806106fd89828a0161067e565b92505060a061070e89828a0161067e565b9150509295509295509295565b6107248161065f565b82525050565b5f60408201905061073d5f83018561071b565b61074a602083018461071b565b9392505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61077a82610751565b9050919050565b61078a81610770565b82525050565b5f6020820190506107a35f830184610781565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffdfea2646970667358221220302016b0ebfa442534f88a468d700282dce67046aefbdba7ac7663d54d2bfd1664736f6c634300081d0033";

  
      type FrostConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: FrostConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class Frost__factory extends ContractFactory {
    
      constructor(...args: FrostConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<Frost & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): Frost__factory {
      return super.connect(runner) as Frost__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): FrostInterface {
      return new Interface(_abi) as FrostInterface;
    }
    
    override attach(address: string | Addressable): Frost {
      return super.attach(address) as Frost;
    }
  static connect(address: string, runner?: ContractRunner | null): Frost {
      return new Contract(address, _abi, runner) as unknown as Frost;
    }
  }

  
  